{"version":3,"names":["quillViewCss","QuillViewStyle0","QuillViewComponent","constructor","hostRef","this","format","content","undefined","debug","formats","modules","strict","styles","theme","defaultEmptyValue","setEditorContent","value","quillEditor","contents","clipboard","convert","setContents","setText","JSON","parse","e","getEditorContent","text","getText","getContents","html","getSemanticHTML","isEmptyValue","stringify","componentDidLoad","toolbar","Quill","editorElement","readOnly","Object","keys","forEach","key","style","setProperty","classList","add","clear","updateStyle","newValue","oldValue","old","updateContent","editorContents","indexOf","changed","newContentString","_a","render","h","ref","el"],"sources":["node_modules/stencil-quill/dist/collection/components/quill-view/quill-view.css?tag=quill-view&encapsulation=scoped","node_modules/stencil-quill/dist/collection/components/quill-view/quill-view.js"],"sourcesContent":[".ql-container.quill-view {\n  border: 0;\n}\n","import { h } from \"@stencil/core\";\nexport class QuillViewComponent {\n    constructor() {\n        this.format = 'html';\n        this.content = undefined;\n        this.debug = 'warn';\n        this.formats = undefined;\n        this.modules = undefined;\n        this.strict = true;\n        this.styles = '{}';\n        this.theme = 'snow';\n        this.defaultEmptyValue = null;\n    }\n    setEditorContent(value) {\n        if (!this.quillEditor) {\n            return null;\n        }\n        if (this.format === 'html') {\n            const contents = this.quillEditor.clipboard.convert(value);\n            this.quillEditor.setContents(contents, 'api');\n        }\n        else if (this.format === 'text') {\n            this.quillEditor.setText(value, 'api');\n        }\n        else if (this.format === 'json') {\n            try {\n                this.quillEditor.setContents(JSON.parse(value), 'api');\n            }\n            catch (e) {\n                this.quillEditor.setText(value, 'api');\n            }\n        }\n        else {\n            this.quillEditor.setText(value, 'api');\n        }\n    }\n    getEditorContent() {\n        if (!this.quillEditor) {\n            return null;\n        }\n        const text = this.quillEditor.getText();\n        const content = this.quillEditor.getContents();\n        let html = this.quillEditor.getSemanticHTML();\n        if (this.isEmptyValue(html)) {\n            html = this.defaultEmptyValue;\n        }\n        if (this.format === 'html') {\n            return html;\n        }\n        else if (this.format === 'text') {\n            return text;\n        }\n        else if (this.format === 'json') {\n            try {\n                return JSON.stringify(content);\n            }\n            catch (e) {\n                return text;\n            }\n        }\n        else {\n            return text;\n        }\n    }\n    componentDidLoad() {\n        let modules = this.modules\n            ? JSON.parse(this.modules)\n            : {\n                toolbar: false,\n            };\n        if (modules.toolbar) {\n            modules.toolbar = false;\n        }\n        this.quillEditor = new Quill(this.editorElement, {\n            debug: this.debug,\n            modules: modules,\n            readOnly: true,\n            theme: this.theme || 'snow',\n            formats: this.formats,\n            strict: this.strict,\n        });\n        if (this.styles) {\n            const styles = JSON.parse(this.styles);\n            Object.keys(styles).forEach((key) => {\n                this.editorElement.style.setProperty(key, styles[key]);\n            });\n        }\n        this.editorElement.classList.add('quill-view');\n        if (this.content) {\n            this.setEditorContent(this.content);\n            this.quillEditor['history'].clear();\n        }\n    }\n    updateStyle(newValue, oldValue) {\n        if (!this.editorElement) {\n            return;\n        }\n        if (oldValue) {\n            const old = JSON.parse(oldValue);\n            Object.keys(old).forEach((key) => {\n                this.editorElement.style.setProperty(key, '');\n            });\n        }\n        if (newValue) {\n            const value = JSON.parse(newValue);\n            Object.keys(value).forEach((key) => {\n                this.editorElement.style.setProperty(key, value[key]);\n            });\n        }\n    }\n    updateContent(newValue) {\n        if (!this.quillEditor) {\n            return null;\n        }\n        const editorContents = this.getEditorContent();\n        if (['text', 'html', 'json'].indexOf(this.format) > -1 && newValue === editorContents) {\n            return null;\n        }\n        else {\n            let changed = false;\n            try {\n                const newContentString = JSON.stringify(newValue);\n                changed = JSON.stringify(editorContents) !== newContentString;\n            }\n            catch (_a) {\n                return null;\n            }\n            if (!changed) {\n                return null;\n            }\n        }\n        this.setEditorContent(newValue);\n    }\n    isEmptyValue(html) {\n        return html === '<p></p>' || html === '<div></div>' || html === '<p><br></p>' || html === '<div><br></div>';\n    }\n    render() {\n        return (h(\"div\", { key: 'b5d966c20180db2d28ee0de2ab8547aa50341bc3', \"quill-element\": true, ref: (el) => { this.editorElement = el; } }));\n    }\n    static get is() { return \"quill-view\"; }\n    static get encapsulation() { return \"scoped\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"./quill-view.css\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"quill-view.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"format\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'html' | 'text' | 'json'\",\n                    \"resolved\": \"\\\"html\\\" | \\\"json\\\" | \\\"text\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"\"\n                },\n                \"attribute\": \"format\",\n                \"reflect\": false,\n                \"defaultValue\": \"'html'\"\n            },\n            \"content\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"\"\n                },\n                \"attribute\": \"content\",\n                \"reflect\": false\n            },\n            \"debug\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"\"\n                },\n                \"attribute\": \"debug\",\n                \"reflect\": false,\n                \"defaultValue\": \"'warn'\"\n            },\n            \"formats\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string[]\",\n                    \"resolved\": \"string[]\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"\"\n                }\n            },\n            \"modules\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"\"\n                },\n                \"attribute\": \"modules\",\n                \"reflect\": false\n            },\n            \"strict\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"\"\n                },\n                \"attribute\": \"strict\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            },\n            \"styles\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"\"\n                },\n                \"attribute\": \"styles\",\n                \"reflect\": false,\n                \"defaultValue\": \"'{}'\"\n            },\n            \"theme\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"\"\n                },\n                \"attribute\": \"theme\",\n                \"reflect\": false,\n                \"defaultValue\": \"'snow'\"\n            },\n            \"defaultEmptyValue\": {\n                \"type\": \"any\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"any\",\n                    \"resolved\": \"any\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"\"\n                },\n                \"attribute\": \"default-empty-value\",\n                \"reflect\": false,\n                \"defaultValue\": \"null\"\n            }\n        };\n    }\n    static get elementRef() { return \"wrapperElement\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"styles\",\n                \"methodName\": \"updateStyle\"\n            }, {\n                \"propName\": \"content\",\n                \"methodName\": \"updateContent\"\n            }];\n    }\n}\n//# sourceMappingURL=quill-view.js.map\n"],"mappings":"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","ignoreList":[]}