{"version":3,"names":["appRootCss","AppRootStyle0","AppRoot","render","h","key","QuillEditorComponent","constructor","hostRef","this","format","debug","placeholder","styles","theme","customToolbarPosition","defaultEmptyValue","defaultModules","toolbar","header","list","script","indent","direction","size","color","slice","background","font","align","setEditorContent","value","contents","quillEditor","clipboard","convert","setContents","setText","JSON","parse","e","getEditorContent","text","getText","content","getContents","html","getSemanticHTML","isEmptyValue","stringify","componentDidLoad","editorElement","document","createElement","setAttribute","modules","toolbarElem","wrapperElement","querySelector","prepend","append","Quill","readOnly","formats","bounds","body","Object","keys","forEach","style","setProperty","clear","editorChangeEvent","on","event","current","old","source","editorChange","emit","delta","editor","oldDelta","oldRange","range","selectionChangeEvent","editorBlur","editorFocus","editorSelectionChange","textChangeEvent","editorContentChange","setTimeout","editorInit","disconnectedCallback","removeListener","updateContent","newValue","editorContents","indexOf","changed","newContentString","_a","updateReadOnly","oldValue","enable","updatePlaceholder","root","dataset","updateStyle","Host","name"],"sources":["src/components/app-root/app-root.css?tag=app-root","src/components/app-root/app-root.tsx","node_modules/stencil-quill/dist/collection/components/quill-editor/quill-editor.js"],"sourcesContent":["@import '~quill/dist/quill.snow.css';\n\nmain {\n  max-width: 850px;\n  margin: 16px;\n}\n","import { Component, h } from '@stencil/core';\n\n@Component({\n  tag: 'app-root',\n  styleUrl: 'app-root.css',\n  shadow: false,\n})\nexport class AppRoot {\n  render() {\n    return (\n        <main>\n          <quill-editor></quill-editor>\n        </main>\n    );\n  }\n}\n","import { h, Host } from \"@stencil/core\";\nexport class QuillEditorComponent {\n    constructor() {\n        this.format = 'html';\n        this.debug = 'warn';\n        this.placeholder = 'Insert text here ...';\n        this.styles = '{}';\n        this.theme = 'snow';\n        this.customToolbarPosition = 'top';\n        this.defaultEmptyValue = null;\n        this.defaultModules = {\n            toolbar: [\n                ['bold', 'italic', 'underline', 'strike'], // toggled buttons\n                ['blockquote', 'code-block'],\n                [{ header: 1 }, { header: 2 }], // custom button values\n                [{ list: 'ordered' }, { list: 'bullet' }],\n                [{ script: 'sub' }, { script: 'super' }], // superscript/subscript\n                [{ indent: '-1' }, { indent: '+1' }], // outdent/indent\n                [{ direction: 'rtl' }], // text direction\n                [{ size: ['small', false, 'large', 'huge'] }], // custom dropdown\n                [{ header: [1, 2, 3, 4, 5, 6, false] }],\n                [{ color: [].slice() }, { background: [].slice() }], // dropdown with defaults from theme\n                [{ font: [].slice() }],\n                [{ align: [].slice() }],\n                ['clean'], // remove formatting button\n                ['link', 'image', 'video'], // link and image, video\n            ],\n        };\n    }\n    setEditorContent(value) {\n        if (this.format === 'html') {\n            const contents = this.quillEditor.clipboard.convert(value);\n            this.quillEditor.setContents(contents, 'api');\n        }\n        else if (this.format === 'text') {\n            this.quillEditor.setText(value, 'api');\n        }\n        else if (this.format === 'json') {\n            try {\n                this.quillEditor.setContents(JSON.parse(value), 'api');\n            }\n            catch (e) {\n                this.quillEditor.setText(value, 'api');\n            }\n        }\n        else {\n            this.quillEditor.setText(value, 'api');\n        }\n    }\n    getEditorContent() {\n        const text = this.quillEditor.getText();\n        const content = this.quillEditor.getContents();\n        let html = this.quillEditor.getSemanticHTML();\n        if (this.isEmptyValue(html)) {\n            html = this.defaultEmptyValue;\n        }\n        if (this.format === 'html') {\n            return html;\n        }\n        else if (this.format === 'text') {\n            return text;\n        }\n        else if (this.format === 'json') {\n            try {\n                return JSON.stringify(content);\n            }\n            catch (e) {\n                return text;\n            }\n        }\n        else {\n            return text;\n        }\n    }\n    componentDidLoad() {\n        this.editorElement = document.createElement('div');\n        this.editorElement.setAttribute('quill-editor', '');\n        let modules = this.modules ? JSON.parse(this.modules) : this.defaultModules;\n        const toolbarElem = this.wrapperElement.querySelector('[slot=\"quill-toolbar\"]');\n        if (toolbarElem) {\n            modules['toolbar'] = toolbarElem;\n            if (this.customToolbarPosition === 'bottom') {\n                this.wrapperElement.prepend(this.editorElement);\n            }\n            else {\n                this.wrapperElement.append(this.editorElement);\n            }\n        }\n        else {\n            this.wrapperElement.append(this.editorElement);\n        }\n        this.quillEditor = new Quill(this.editorElement, {\n            debug: this.debug,\n            modules: modules,\n            placeholder: this.placeholder,\n            readOnly: this.readOnly || false,\n            theme: this.theme || 'snow',\n            formats: this.formats,\n            bounds: this.bounds ? (this.bounds === 'self' ? this.editorElement : this.bounds) : document.body\n        });\n        if (this.styles) {\n            const styles = JSON.parse(this.styles);\n            Object.keys(styles).forEach((key) => {\n                this.editorElement.style.setProperty(key, styles[key]);\n            });\n        }\n        if (this.content) {\n            this.setEditorContent(this.content);\n            this.quillEditor['history'].clear();\n        }\n        this.editorChangeEvent = this.quillEditor.on('editor-change', (event, current, old, source) => {\n            // only emit changes emitted by user interactions\n            if (event === 'text-change') {\n                const text = this.quillEditor.getText();\n                const content = this.quillEditor.getContents();\n                let html = this.quillEditor.getSemanticHTML();\n                if (this.isEmptyValue(html)) {\n                    html = null;\n                }\n                this.editorChange.emit({\n                    content,\n                    delta: current,\n                    editor: this.quillEditor,\n                    event,\n                    html,\n                    oldDelta: old,\n                    source,\n                    text,\n                });\n            }\n            else {\n                this.editorChange.emit({\n                    editor: this.quillEditor,\n                    event,\n                    oldRange: old,\n                    range: current,\n                    source,\n                });\n            }\n        });\n        this.selectionChangeEvent = this.quillEditor.on('selection-change', (range, oldRange, source) => {\n            if (range === null) {\n                this.editorBlur.emit({\n                    editor: this.quillEditor,\n                    source,\n                });\n            }\n            else if (oldRange === null) {\n                this.editorFocus.emit({\n                    editor: this.quillEditor,\n                    source,\n                });\n            }\n            this.editorSelectionChange.emit({\n                editor: this.quillEditor,\n                range,\n                oldRange,\n                source,\n            });\n        });\n        this.textChangeEvent = this.quillEditor.on('text-change', (delta, oldDelta, source) => {\n            const text = this.quillEditor.getText();\n            const content = this.quillEditor.getContents();\n            let html = this.quillEditor.getSemanticHTML();\n            if (this.isEmptyValue(html)) {\n                html = null;\n            }\n            this.editorContentChange.emit({\n                editor: this.quillEditor,\n                content,\n                delta,\n                html,\n                oldDelta,\n                source,\n                text,\n            });\n        });\n        setTimeout(() => {\n            this.editorInit.emit(this.quillEditor);\n        });\n    }\n    disconnectedCallback() {\n        if (this.selectionChangeEvent) {\n            this.selectionChangeEvent.removeListener('selection-change');\n        }\n        if (this.textChangeEvent) {\n            this.textChangeEvent.removeListener('text-change');\n        }\n        if (this.editorChangeEvent) {\n            this.editorChangeEvent.removeListener('editor-change');\n        }\n    }\n    updateContent(newValue) {\n        if (!this.quillEditor) {\n            return;\n        }\n        const editorContents = this.getEditorContent();\n        if (['text', 'html', 'json'].indexOf(this.format) > -1 && newValue === editorContents) {\n            return null;\n        }\n        else {\n            let changed = false;\n            try {\n                const newContentString = JSON.stringify(newValue);\n                changed = JSON.stringify(editorContents) !== newContentString;\n            }\n            catch (_a) {\n                return null;\n            }\n            if (!changed) {\n                return null;\n            }\n        }\n        this.setEditorContent(newValue);\n    }\n    updateReadOnly(newValue, oldValue) {\n        if (!this.quillEditor) {\n            return;\n        }\n        if (newValue !== oldValue) {\n            this.quillEditor.enable(!newValue);\n        }\n    }\n    updatePlaceholder(newValue, oldValue) {\n        if (!this.quillEditor) {\n            return;\n        }\n        if (newValue !== oldValue) {\n            this.quillEditor.root.dataset.placeholder = newValue;\n        }\n    }\n    updateStyle(newValue, oldValue) {\n        if (!this.editorElement) {\n            return;\n        }\n        if (oldValue) {\n            const old = JSON.parse(oldValue);\n            Object.keys(old).forEach((key) => {\n                this.editorElement.style.setProperty(key, '');\n            });\n        }\n        if (newValue) {\n            const value = JSON.parse(newValue);\n            Object.keys(value).forEach((key) => {\n                this.editorElement.style.setProperty(key, value[key]);\n            });\n        }\n    }\n    render() {\n        h(Host, null, h(\"slot\", { name: \"quill-toolbar\", \"quill-toolbar\": \"\" }));\n    }\n    isEmptyValue(html) {\n        return html === '<p></p>' || html === '<div></div>' || html === '<p><br></p>' || html === '<div><br></div>';\n    }\n    static get is() { return \"quill-editor\"; }\n    static get encapsulation() { return \"scoped\"; }\n    static get properties() {\n        return {\n            \"format\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'html' | 'text' | 'json'\",\n                    \"resolved\": \"\\\"html\\\" | \\\"json\\\" | \\\"text\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"attribute\": \"format\",\n                \"reflect\": false,\n                \"defaultValue\": \"'html'\"\n            },\n            \"bounds\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"HTMLElement | string\",\n                    \"resolved\": \"HTMLElement | string\",\n                    \"references\": {\n                        \"HTMLElement\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::HTMLElement\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"attribute\": \"bounds\",\n                \"reflect\": false\n            },\n            \"content\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"attribute\": \"content\",\n                \"reflect\": false\n            },\n            \"debug\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"attribute\": \"debug\",\n                \"reflect\": false,\n                \"defaultValue\": \"'warn'\"\n            },\n            \"formats\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string[]\",\n                    \"resolved\": \"string[]\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"\"\n                },\n                \"getter\": false,\n                \"setter\": false\n            },\n            \"modules\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"attribute\": \"modules\",\n                \"reflect\": false\n            },\n            \"placeholder\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"attribute\": \"placeholder\",\n                \"reflect\": false,\n                \"defaultValue\": \"'Insert text here ...'\"\n            },\n            \"readOnly\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"attribute\": \"read-only\",\n                \"reflect\": false\n            },\n            \"styles\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"attribute\": \"styles\",\n                \"reflect\": false,\n                \"defaultValue\": \"'{}'\"\n            },\n            \"theme\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"attribute\": \"theme\",\n                \"reflect\": false,\n                \"defaultValue\": \"'snow'\"\n            },\n            \"customToolbarPosition\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'top' | 'bottom'\",\n                    \"resolved\": \"\\\"bottom\\\" | \\\"top\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"attribute\": \"custom-toolbar-position\",\n                \"reflect\": false,\n                \"defaultValue\": \"'top'\"\n            },\n            \"defaultEmptyValue\": {\n                \"type\": \"any\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"any\",\n                    \"resolved\": \"any\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"\"\n                },\n                \"getter\": false,\n                \"setter\": false,\n                \"attribute\": \"default-empty-value\",\n                \"reflect\": false,\n                \"defaultValue\": \"null\"\n            }\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"editorInit\",\n                \"name\": \"editorInit\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"\"\n                },\n                \"complexType\": {\n                    \"original\": \"any\",\n                    \"resolved\": \"any\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"editorChange\",\n                \"name\": \"editorChange\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"\"\n                },\n                \"complexType\": {\n                    \"original\": \"| {\\n        editor: any;\\n        event: 'text-change';\\n        content: any;\\n        text: string;\\n        html: string;\\n        delta: any;\\n        oldDelta: any;\\n        source: string;\\n      }\\n    | {\\n        editor: any;\\n        event: 'selection-change';\\n        range: any;\\n        oldRange: any;\\n        source: string;\\n      }\",\n                    \"resolved\": \"{ editor: any; event: \\\"selection-change\\\"; range: any; oldRange: any; source: string; } | { editor: any; event: \\\"text-change\\\"; content: any; text: string; html: string; delta: any; oldDelta: any; source: string; }\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"editorContentChange\",\n                \"name\": \"editorContentChange\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"\"\n                },\n                \"complexType\": {\n                    \"original\": \"{\\n    editor: any;\\n    content: any;\\n    text: string;\\n    html: string;\\n    delta: any;\\n    oldDelta: any;\\n    source: string;\\n  }\",\n                    \"resolved\": \"{ editor: any; content: any; text: string; html: string; delta: any; oldDelta: any; source: string; }\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"editorSelectionChange\",\n                \"name\": \"editorSelectionChange\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"\"\n                },\n                \"complexType\": {\n                    \"original\": \"{\\n    editor: any;\\n    range: any;\\n    oldRange: any;\\n    source: string;\\n  }\",\n                    \"resolved\": \"{ editor: any; range: any; oldRange: any; source: string; }\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"editorFocus\",\n                \"name\": \"editorFocus\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"\"\n                },\n                \"complexType\": {\n                    \"original\": \"{\\n    editor: any;\\n    source: string;\\n  }\",\n                    \"resolved\": \"{ editor: any; source: string; }\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"editorBlur\",\n                \"name\": \"editorBlur\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"\"\n                },\n                \"complexType\": {\n                    \"original\": \"{\\n    editor: any;\\n    source: string;\\n  }\",\n                    \"resolved\": \"{ editor: any; source: string; }\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get elementRef() { return \"wrapperElement\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"content\",\n                \"methodName\": \"updateContent\"\n            }, {\n                \"propName\": \"readOnly\",\n                \"methodName\": \"updateReadOnly\"\n            }, {\n                \"propName\": \"placeholder\",\n                \"methodName\": \"updatePlaceholder\"\n            }, {\n                \"propName\": \"styles\",\n                \"methodName\": \"updateStyle\"\n            }];\n    }\n}\n//# sourceMappingURL=quill-editor.js.map\n"],"mappings":"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","ignoreList":[]}